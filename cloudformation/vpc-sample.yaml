AWSTemplateFormatVersion: 2010-09-09
Description: Hands-on template for VPC

#------------------------------------------------------
#  AWS CLIの実行の仕方
#  aws cloudformation create-stack --stack-name vpcsample --template-body file://vpc-sample.yaml
#
#  スタック名： vpcsample
#
#  % cfn-lint vpc.yaml       
#   W3005 Obsolete DependsOn on resource (CFnVPCIGW), dependency already enforced by a "Ref" at Resources/PublicRoute/Properties/GatewayId/Ref
#   vpc.yaml:96:5
#  cfn-lintで文法チェックコマンドを実行すると上記のエラーがでますが、
#  本番は、VPCからEC2、RDS、ELBまで動作するので問題ないです。
#------------------------------------------------------

Resources:
#------------------------------------------------------
#  VPC
#------------------------------------------------------
  VPCSample:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 11.0.0.0/16
      InstanceTenancy: default
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: vpcsample
#------------------------------------------------------
#  パブリックサブネット(ap-northest-1a)
#------------------------------------------------------
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 11.0.0.0/24
      VpcId: !Ref VPCSample
      AvailabilityZone: !Select [ 0, !GetAZs ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet1
#------------------------------------------------------
#  パブリックサブネット(ap-northest-1c)
#------------------------------------------------------
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 11.0.1.0/24
      VpcId: !Ref VPCSample
      AvailabilityZone: !Select [ 1, !GetAZs ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2
#------------------------------------------------------
#  パブリックサブネット(ap-northest-1d)
#------------------------------------------------------
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 11.0.2.0/24
      VpcId: !Ref VPCSample
      AvailabilityZone: !Select [ 2, !GetAZs ]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet3
#------------------------------------------------------
#  プライベートサブネット(ap-northest-1a)
#------------------------------------------------------
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 11.0.3.0/24
      VpcId: !Ref VPCSample
      AvailabilityZone: !Select [ 0, !GetAZs ]
      Tags:
        - Key: Name
          Value: PrivateSubnet1
#------------------------------------------------------
#  プライベートサブネット(ap-northest-1c)
#------------------------------------------------------
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 11.0.4.0/24
      VpcId: !Ref VPCSample
      AvailabilityZone: !Select [ 1, !GetAZs ]
      Tags:
        - Key: Name
          Value: PrivateSubnet2
#------------------------------------------------------
#  プライベートサブネット(ap-northest-1d)
#------------------------------------------------------
  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      CidrBlock: 11.0.5.0/24
      VpcId: !Ref VPCSample
      AvailabilityZone: !Select [ 2, !GetAZs ]
      Tags:
        - Key: Name
          Value: PrivateSubnet3

#------------------------------------------------------
#  インターネットゲートウェイ
#------------------------------------------------------
  CFnVPCIGW:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: VPCIGWSample

  CFnVPCIGWAttach:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref CFnVPCIGW
      VpcId: !Ref VPCSample
#------------------------------------------------------
#  ルートテーブルをパブリックサブネットにアタッチ
#------------------------------------------------------

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCSample
      Tags:
        - Key: Name
          Value: Public Route

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: CFnVPCIGW
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref CFnVPCIGW

  PublicSubnet1Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3Association:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

#------------------------------------------------------
#  セキュリティーグループ(EC2Instance)
#------------------------------------------------------
  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EC2-SG
      VpcId: !Ref VPCSample
      SecurityGroupIngress:
        # HTTP接続
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 80
          ToPort: 80
        # SSH接続
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 22
          ToPort: 22
        # HTTPS接続
        - IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: 443
          ToPort: 443